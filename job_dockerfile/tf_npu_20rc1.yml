FROM ubuntu:18.04

# Set timezone
RUN apt-get install -y systemd --fix-missing
RUN timedatectl set-timezone Asia/Shanghai

#RUN apt-get install -y build-essential libhdf5-dev pkg-config libhdf5-103 libatlas-base-dev gfortran sudo
RUN mv /etc/apt/sources.list /etc/apt/sources.list.bak && \
    echo "deb [trusted=yes] https://repo.huaweicloud.com/ubuntu-ports/ bionic main restricted universe multiverse" >/etc/apt/sources.list && \
    echo "deb-src [trusted=yes] https://repo.huaweicloud.com/ubuntu-ports/ bionic main restricted universe multiverse" >>/etc/apt/sources.list && \
    echo "deb [trusted=yes] https://repo.huaweicloud.com/ubuntu-ports/ bionic-security main restricted universe multiverse" >>/etc/apt/sources.list && \
    echo "deb-src [trusted=yes] https://repo.huaweicloud.com/ubuntu-ports/ bionic-security main restricted universe multiverse" >>/etc/apt/sources.list && \
    echo "deb [trusted=yes] https://repo.huaweicloud.com/ubuntu-ports/ bionic-updates main restricted universe multiverse" >>/etc/apt/sources.list && \
    echo "deb-src [trusted=yes] https://repo.huaweicloud.com/ubuntu-ports/ bionic-updates main restricted universe multiverse" >>/etc/apt/sources.list && \
    echo "deb [trusted=yes] https://repo.huaweicloud.com/ubuntu-ports/ bionic-backports main restricted universe multiverse" >>/etc/apt/sources.list && \
    echo "deb [trusted=yes] [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu bionic stable" >>/etc/apt/sources.list && \
    echo "deb-src [trusted=yes] https://repo.huaweicloud.com/ubuntu-ports/ bionic-backports main restricted universe multiverse" >>/etc/apt/sources.list

RUN apt-get update && apt-get install -y build-essential libhdf5-dev pkg-config libhdf5-103 libatlas-base-dev gfortran sudo --fix-missing
RUN sudo apt install software-properties-common
RUN sudo apt-get update && apt-get install -y --no-install-recommends   git   mercurial   openssh-client   subversion     procps && rm -rf /var/lib/apt/lists/*
RUN sudo apt-get update && apt-get install -y --no-install-recommends   ca-certificates   curl   netbase   wget  && rm -rf /var/lib/apt/lists/*

# Install net-tools
RUN ln -s /lib /lib64
RUN apt-get install -y sudo
RUN apt-get install -y net-tools
RUN apt-get install -y iproute2
RUN apt-get install sudo openssl -y
RUN apt-get install vim -y

WORKDIR /usr/local/Ascend/
RUN pip3.7 list
RUN pip3.7 config set global.index-url https://mirrors.aliyun.com/pypi/simple
RUN pip3.7 install --upgrade pip
RUN pip3.7 install  ./tfplugin/20.0.RC1/arm64-linux_gcc7.3.0/tfplugin/bin/npu_bridge-1.15.0-py3-none-any.whl
RUN pip3.7 install  ./nnae/20.0.RC1/arm64-linux_gcc7.3.0/fwkacllib/lib64/hccl-0.1.0-py3-none-any.whl
RUN pip3.7 install  ./nnae/20.0.RC1/arm64-linux_gcc7.3.0/fwkacllib/lib64/te-0.4.0-py3-none-any.whl
RUN pip3.7 install  ./nnae/20.0.RC1/arm64-linux_gcc7.3.0/fwkacllib/lib64/topi-0.4.0-py3-none-any.whl


COPY tensorflow-1.15.0-cp37-cp37m-linux_aarch64.whl .
RUN pip3.7 install  /usr/local/Ascend/tensorflow-1.15.0-cp37-cp37m-linux_aarch64.whl

RUN pip3.7 install tensorboard jupyterlab
RUN pip3.7 install sympy

# control log level. 0-DEBUG, 1-INFO, 2-WARNING, 3-ERROR, default level is WARNING.
ENV GLOG_v=2
# Conda environmental options
# the root directory of run package
ENV LOCAL_ASCEND=/usr/local/Ascend
# lib libraries that the run package depends on
ENV LD_LIBRARY_PATH=\
/usr/lib/aarch64-linux-gnu/hdf5/serial:\
${LOCAL_ASCEND}/add-ons:\
${LOCAL_ASCEND}/nnae/20.0.RC1/arm64-linux_gcc7.3.0/fwkacllib/lib64:\
${LOCAL_ASCEND}/driver/lib64/common:\
${LOCAL_ASCEND}/driver/lib64/driver:\
/usr/local/lib\:\
/usr/lib/
# Environment variables that must be configured
# TBE operator implementation tool path
ENV TBE_IMPL_PATH=${LOCAL_ASCEND}/ascend-toolkit/20.0.RC1/arm64-linux_gcc7.3.0/opp/op_impl/built-in/ai_core/tbe
# TBE operator compilation tool path
ENV PATH=${LOCAL_ASCEND}/ascend-toolkit/20.0.RC1/arm64-linux_gcc7.3.0/fwkacllib/ccec_compiler/bin/:${PATH}
# Python library that TBE implementation depends on
ENV PYTHONPATH=${TBE_IMPL_PATH}:${PYTHONPATH}
ENV ASCEND_OPP_PATH=/usr/local/Ascend/ascend-toolkit/20.0.RC1/arm64-linux_gcc7.3.0/opp





# build cmd
docker build -f ./Dockerfile-tf-withtools-rc1 . -t tf:1.15-rc1

# apt 依赖
RUN apt-get install -y build-essential libhdf5-dev pkg-config libhdf5-103 libatlas-base-dev gfortran sudo
RUN sudo apt install software-properties-common
RUN sudo apt-get update && apt-get install -y --no-install-recommends   git   mercurial   openssh-client   subversion     procps && rm -rf /var/lib/apt/lists/*
RUN sudo apt-get update && apt-get install -y --no-install-recommends   ca-certificates   curl   netbase   wget  && rm -rf /var/lib/apt/lists/* 


# Docker 查看镜像详情
docker inspect docker.io/mysql:5.7
docker history --no-trunc docker.io/mysql:5.7

# 设置时区
cat /etc/timezone
列出时区：timedatectl list-timezones

timedatectl set-timezone Asia/Shanghai